// Code generated by go-swagger; DO NOT EDIT.

package apis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a simple gold store API.",
    "title": "Gold Store Demo",
    "contact": {
      "name": "gold store maintainers",
      "url": "http://localhost:8081/docs",
      "email": "gold.store@email.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/api",
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "health check"
        ],
        "summary": "check server",
        "operationId": "getHealthCheck",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/baseResponse"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/baseResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "baseResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "badRequest": {
      "description": "something wrong when send request to server",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "created": {
      "description": "the request to the server was successful",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "forbiddenAccess": {
      "description": "the client don` + "`" + `t have access to the resource",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "internalServerError": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "notFound": {
      "description": "the request resource is not found",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "success": {
      "description": "the request to the server was successful",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "unauthorized": {
      "description": "the client must be authenticated to perform this request",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "unprocessableEntity": {
      "description": "The request is correct but server can` + "`" + `t process the request",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a simple gold store API.",
    "title": "Gold Store Demo",
    "contact": {
      "name": "gold store maintainers",
      "url": "http://localhost:8081/docs",
      "email": "gold.store@email.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/api",
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "health check"
        ],
        "summary": "check server",
        "operationId": "getHealthCheck",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/baseResponse"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/baseResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "baseResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "badRequest": {
      "description": "something wrong when send request to server",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "created": {
      "description": "the request to the server was successful",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "forbiddenAccess": {
      "description": "the client don` + "`" + `t have access to the resource",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "internalServerError": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "notFound": {
      "description": "the request resource is not found",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "success": {
      "description": "the request to the server was successful",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "unauthorized": {
      "description": "the client must be authenticated to perform this request",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    },
    "unprocessableEntity": {
      "description": "The request is correct but server can` + "`" + `t process the request",
      "schema": {
        "$ref": "#/definitions/baseResponse"
      }
    }
  }
}`))
}
